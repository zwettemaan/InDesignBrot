const SCRIPT_PANEL_LAUNCHER                           = "InDesignBrot.idjs";
const SCRIPT_PROJECT_MAIN                             = "InDesignBrot.js";
const FOLDER_NAME_PROJECT                             = "InDesignBrot.2.0.1";
const INDESIGN_VERSION                                = "19.0";
const LOCALE                                          = "en_US";
const ISSUER_GUID                                     = "1186cb863f80e0c2d5ee377c49d7eade";
const HOME                                            = "/Users/kris/";

const SCRIPT_PROJECT_CRDT_UXP                         = "CreativeDeveloperTools_UXP/crdtuxp.js";
const LIBRARY                                         = HOME + "Library/";  
const FOLDER_PATH_PROJECT_ROOT                        = LIBRARY + "Application Support/net.tightener/Licensing/Packages/" + ISSUER_GUID + "/" + FOLDER_NAME_PROJECT + "/";
const FOLDER_PATH_SCRIPT_PANEL_ROOT                   = LIBRARY + "Preferences/Adobe InDesign/Version " + INDESIGN_VERSION + "/" + LOCALE + "/Scripts/Scripts Panel/" + FOLDER_NAME_PROJECT + "/";

const FILE_PATH_SCRIPT_PANEL_LAUNCHER_SCRIPT          = FOLDER_PATH_SCRIPT_PANEL_ROOT + "/" + FOLDER_NAME_PROJECT + "/" + SCRIPT_PANEL_LAUNCHER;

const FILE_PATH_PROJECT_CRDT_UXP                      = FOLDER_PATH_PROJECT_ROOT      + "/" + FOLDER_NAME_PROJECT + "/" + SCRIPT_PROJECT_CRDT_UXP;
const FILE_PATH_PROJECT_MAIN_SCRIPT                   = FOLDER_PATH_PROJECT_ROOT      + "/" + FOLDER_NAME_PROJECT + "/" + SCRIPT_PROJECT_MAIN; 

const SCRIPT_PANEL_RELATIVE_FOLDER_PATH_PROJECT_ROOT  = relativeTo(FOLDER_PATH_SCRIPT_PANEL_ROOT, FOLDER_PATH_PROJECT_ROOT);

const SCRIPT_PANEL_RELATIVE_FILE_PATH_CRDT_UXP        = SCRIPT_PANEL_RELATIVE_FOLDER_PATH_PROJECT_ROOT + "/" + SCRIPT_PROJECT_CRDT_UXP;
const SCRIPT_PANEL_RELATIVE_FILE_PATH_MAIN_SCRIPT     = SCRIPT_PANEL_RELATIVE_FOLDER_PATH_PROJECT_ROOT + "/" + SCRIPT_PROJECT_MAIN;

const inDesign = require("indesign");
const app = inDesign.app;

async function criticalAlert(message) {

    let messageList = ("" + message).split("\n");

    let dlg = app.dialogs.add();
    let col = dlg.dialogColumns.add();
    for (let idx = 0; idx < messageList.length; idx++) {
        let row = col.dialogRows.add();
        let stText = row.staticTexts.add({ 
            staticAlignment: inDesign.StaticAlignmentOptions.LEFT_ALIGN
        });
        stText.staticLabel = "" + messageList[idx];    
    }
    dlg.canCancel = false;
    dlg.show();
    dlg.destroy();
}

function relativeTo(rootPath, targetPath) {

    let splitRootPath = rootPath.split("/");
    let splitTargetPath = targetPath.split("/");
    
    let relativePath = "";
    let rootIdx = 0;
    let targetIdx = 0;
    while (rootIdx < splitRootPath.length || targetIdx < splitTargetPath.length) {
        
        let rootSegment = undefined;
        while (! rootSegment && rootIdx < splitRootPath.length) {
            rootSegment = splitRootPath[rootIdx];
            rootIdx++;
        }    
        
        let targetSegment = undefined;
        while (! targetSegment && targetIdx < splitTargetPath.length) {
            targetSegment = splitTargetPath[targetIdx];
            targetIdx++;
        }

        if (rootSegment && targetSegment) {
            if (rootSegment != targetSegment) {
                if (! relativePath) {
                    relativePath = "../" + targetSegment;
                }
                else {
                    relativePath = "../" + relativePath + "/" + targetSegment;
                }
            }
        }
        else if (rootSegment) {
            relativePath = "../" + relativePath;
        }
        else if (targetSegment) {
            relativePath = relativePath + "/" + targetSegment;
        }
    }

    return relativePath;
}

try {
    global.crdtuxp = await global.require(SCRIPT_PANEL_RELATIVE_FILE_PATH_CRDT_UXP);
    global.SCRIPT_PANEL_RELATIVE_FOLDER_PATH_PROJECT_ROOT = SCRIPT_PANEL_RELATIVE_FOLDER_PATH_PROJECT_ROOT;
    await global.require(SCRIPT_PANEL_RELATIVE_FILE_PATH_MAIN_SCRIPT);
}
catch (err) {
    await criticalAlert("Error: broken link.\nThe software \'InDesignBrot.2.0.1\' has become\nunlinked from the Scripts Panel.\n\nRemove the script folder \'InDesignBrot.2.0.1\'\nfrom your Scripts panel manually, then re-install\nby way of PluginInstaller.");
}